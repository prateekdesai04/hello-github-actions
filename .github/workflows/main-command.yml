name: Cloud Continuous Integration

on:
  push:
  workflow_dispatch:
    inputs:
      repository:
        description: 'The repository from which the slash command was dispatched'
        required: true
      comment-id:
        description: 'The comment-id of the slash command'
        required: true
      pr-sha:
        description: 'The pr-sha of which the slash command was dispatched'
        required: true
      branch_or_pr_number:
        description: 'dummy parameter to allow benchmark workflow to run'
        required: false
      forked_branch:
        description: 'get branch name'
        required: false
      forked_repo:
        description: 'get fork repository'
        required: false

permissions:
  id-token: write
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
    build:
      strategy:
        matrix:
          platform: [ubuntu-latest]
          python: ["3.8"]
      runs-on: ${{ matrix.platform }}
      name: Test
      steps:
        - name: Setup Miniconda
          uses: conda-incubator/setup-miniconda@v2.0.0
          with:
            activate-environment: autogluon_py3
            auto-update-conda: true
            python-version: ${{ matrix.python }}
    viewEventPayload:
      runs-on: ubuntu-latest
      steps:
        - name: View GitHub Input Payload
          run: |
            echo "GitHub Input Payload:"
            echo "${{ toJson(github.events.input) }}"
            echo "FORKED_REPO: ${{ env.FORKED_REPO }}"
            echo "FORKED_BRANCH: ${{ env.FORKED_BRANCH }}"
        - name: Get Forked Repository and Branch
          id: pr_info
          run: |
            # Get the pull request number from the GitHub context
            pr_number=${{ github.event.issue.number }}
            
            # Use the GitHub API to fetch information about the pull request
            pr_info=$(curl -s -H "Authorization: token ${{ secrets.PAT }}" \
                        "https://api.github.com/repos/${{ github.repository }}/pulls/$pr_number")

            # Extract the forked repository and branch from the pull request info
            forked_repo=$(echo "$pr_info" | jq -r '.head.repo.full_name')
            forked_branch=$(echo "$pr_info" | jq -r '.head.ref')

            echo "Forked Repository: $forked_repo"
            echo "Forked Branch: $forked_branch"

          
        