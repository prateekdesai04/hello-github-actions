name: Cloud Continuous Integration

on:
  push:
  workflow_dispatch:
    inputs:
      repository:
        description: 'The repository from which the slash command was dispatched'
        required: true
      comment-id:
        description: 'The comment-id of the slash command'
        required: true
      pr-sha:
        description: 'The pr-sha of which the slash command was dispatched'
        required: true
      branch_or_pr_number:
        description: 'dummy parameter to allow benchmark workflow to run'
        required: false
      branch_name:
        description: 'get branch name'
        required: false
      fork_repo:
        description: 'get fork repository'
        required: false

permissions:
  id-token: write
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
    build:
      strategy:
        matrix:
          platform: [ubuntu-latest]
          python: ["3.8"]
      runs-on: ${{ matrix.platform }}
      name: Test
      steps:
        - name: Setup Miniconda
          uses: conda-incubator/setup-miniconda@v2.0.0
          with:
            activate-environment: autogluon_py3
            auto-update-conda: true
            python-version: ${{ matrix.python }}
        - name: Extract branch and fork info
          run: |
            echo "Comment Body: ${{ github.event.comment.body }}"
            echo "Branch Name: ${{ github.event.pull_request.head.ref }}"
            echo "Fork Repository: ${{ github.event.pull_request.head.repo.full_name }}"
            echo "Var Branch Name: ${{ github.event.inputs.branch_name }}"
            echo "Var Fork Repository: ${{ github.event.inputs.fork_repo }}"
    viewEventPayload:
    runs-on: ubuntu-latest
    steps:
      - name: View GitHub Event Payload
        run: |
          echo "GitHub Event Payload:"
          echo "${{ toJson(github.event) }}"
          
        